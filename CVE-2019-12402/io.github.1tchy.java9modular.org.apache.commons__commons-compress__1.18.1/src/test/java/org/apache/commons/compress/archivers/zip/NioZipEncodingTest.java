package org.apache.commons.compress.archivers.zip;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.time.temporal.TemporalUnit;
import java.util.Arrays;
import java.util.concurrent.TimeUnit;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;

/**
 * Test from https://github.com/apache/commons-compress/blob/4ad5d80a6272e007f64a6ac66829ca189a8093b9/src/test/java/org/apache/commons/compress/archivers/zip/NioZipEncodingTest.java
 * as per https://github.com/tuhh-softsec/vul4j .
 * Irrelevant tests removed, Junit replaced by JUnit5, added timeout to detect infinite loop.
 * @author jens dietrich
 */

public class NioZipEncodingTest {

    @Test
    public void partialSurrogatePair() {

        final NioZipEncoding e = new NioZipEncoding(StandardCharsets.US_ASCII, false);
        assertTimeoutPreemptively(
            Duration.ofSeconds(10),
            () -> {
                ByteBuffer bb = e.encode("\ud83c");
                final int off = bb.arrayOffset();
                byte[] result = Arrays.copyOfRange(bb.array(), off, off + bb.limit() - bb.position());
                assertEquals(0, result.length);
            }
        );
    }
}